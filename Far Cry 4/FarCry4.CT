<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Script"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Stable Script"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Skill Point EXP x10"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+14062D0) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
imul ebx,#10

originalcode:
add [rdi+64],ebx
add [rdi+68],ebx

exit:
jmp returnhere

"FC64.dll"+14062D0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+14062D0:
db 01 5F 64 01 5F 68
//add [rdi+64],ebx
//add [rdi+68],ebx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Skill Point +1"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+1406207) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov eax,(int)-1

originalcode:
sub [rbx+6C],eax
mov al,01

exit:
jmp returnhere

"FC64.dll"+1406207:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+1406207:
db 29 43 6C B0 01
//sub [rbx+6C],eax
//mov al,01
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Money x2"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+B8385C) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
imul eax,#2

originalcode:
mov [rdi+00000138],eax

exit:
jmp returnhere

"FC64.dll"+B8385C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+B8385C:
db 89 87 38 01 00 00
//mov [rdi+00000138],eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Inf Health Syringe Consume"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+C300BF) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
add eax,#1

originalcode:
mov [rcx+000000C8],eax

exit:
jmp returnhere

"FC64.dll"+C300BF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+C300BF:
db 89 81 C8 00 00 00
//mov [rcx+000000C8],eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Single Bullet No Reload"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,16,"FC64.dll"+D88378)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov edx,#1

originalcode:
mov [rcx+00000104],edx

exit:
jmp returnhere

"FC64.dll"+D88378:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+D88378:
db 89 91 04 01 00 00
//mov [rcx+00000104],edx
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Bullet"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+D2FACC) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp [rdx+14],#256
jne originalcode

add ecx,#1
mov [rdx+00000104],ecx
jmp exit

originalcode:
mov ecx,0
mov [rdx+00000104],ecx
mov ecx,0

exit:
jmp returnhere

"FC64.dll"+D2FACC:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+D2FACC:
db 89 8A 04 01 00 00
//mov [rdx+00000104],ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Health"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+901535) 
label(returnhere)
label(originalcode)
label(exit)

alloc(healthZero,4,"FC64.dll"+901535)
alloc(healthIncrease,4,"FC64.dll"+901535)

healthZero:
dd (float)0

healthIncrease:
dd (float)150

newmem:
addss xmm1,[healthIncrease]

originalcode:
movss [rcx+18],xmm1

exit:
jmp returnhere

"FC64.dll"+901535:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(healthZero)
dealloc(healthIncrease)
"FC64.dll"+901535:
db F3 0F 11 49 18
//movss [rcx+18],xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Karma Point x5"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FC64.dll"+1406611) 
label(returnhere)
label(originalcode)
label(exit)

newmem:
add r9d,(int)500

originalcode:
mov [rdi+7C],r9d
call FC64.dll+A3D0C0

exit:
jmp returnhere

"FC64.dll"+1406611:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FC64.dll"+1406611:
db 44 89 4F 7C E8 A6 6A 63 FF
//mov [rdi+7C],r9d
//call FC64.dll+A3D0C0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Money: mov [rdi+00000138],eax</Description>
      <AddressString>FC64.dll+B8385C</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>30</Byte>
        <Byte>0F</Byte>
        <Byte>48</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>38</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Bullet: mov [rdx+00000104],ecx</Description>
      <AddressString>FC64.dll+D2FACC</AddressString>
      <Before>
        <Byte>CB</Byte>
        <Byte>3B</Byte>
        <Byte>C8</Byte>
        <Byte>74</Byte>
        <Byte>21</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>8A</Byte>
        <Byte>04</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>4A</Byte>
        <Byte>60</Byte>
        <Byte>C6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Health 1: movss [rcx+18],xmm1</Description>
      <AddressString>FC64.dll+901535</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>0D</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>49</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
        <Byte>85</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Skill Point EXP: add [rdi+68],ebx</Description>
      <AddressString>FC64.dll+14062D3</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>5F</Byte>
        <Byte>64</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>5F</Byte>
        <Byte>68</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>30</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Skill Point: sub [rbx+6C],eax</Description>
      <AddressString>FC64.dll+1406207</AddressString>
      <Before>
        <Byte>74</Byte>
        <Byte>06</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>43</Byte>
        <Byte>6C</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>E9</Byte>
        <Byte>72</Byte>
        <Byte>FE</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Karma Point: mov [rdi+7C],r9d</Description>
      <AddressString>FC64.dll+1406611</AddressString>
      <Before>
        <Byte>7C</Byte>
        <Byte>44</Byte>
        <Byte>8D</Byte>
        <Byte>0C</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>7C</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>A6</Byte>
        <Byte>6A</Byte>
        <Byte>63</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Single Bullet: mov [rcx+00000104],edx</Description>
      <AddressString>FC64.dll+D88378</AddressString>
      <Before>
        <Byte>FF</Byte>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>74</Byte>
        <Byte>21</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>91</Byte>
        <Byte>04</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>60</Byte>
        <Byte>C6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FC64.dll+1406644</Description>
      <AddressString>FC64.dll+1406620</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>D8</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>22</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>78</Byte>
        <Byte>BA</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmovg eax,r8d</Description>
      <AddressString>FC64.dll+14065FE</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>3B</Byte>
        <Byte>C1</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>4F</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>78</Byte>
        <Byte>41</Byte>
        <Byte>3B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Health Syringe Consume :mov [rcx+000000C8],eax</Description>
      <AddressString>FC64.dll+C300BF</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>C8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>66</Byte>
        <Byte>A7</Byte>
        <Byte>FC</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Health Syringe Auto Craft :inc [rcx+000000C8]</Description>
      <AddressString>FC64.dll+C2F274</AddressString>
      <Before>
        <Byte>EC</Byte>
        <Byte>B0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>81</Byte>
        <Byte>C8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>8B</Byte>
        <Byte>E1</Byte>
        <Byte>41</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Health Syringe From Store :mov [rcx+000000C8],edx</Description>
      <AddressString>FC64.dll+C3E09B</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>F0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>91</Byte>
        <Byte>C8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>05</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>Commonalities value
Bullet
RDX       Me        Enemies/Others
4E8       1              0
430       1              0
514       1              0
20        1              0
3C        1              0
30        1              0
38        1              0
14        256            64
RSI
28        6              0
10        12             4
Health
RCX
414        1             0
</Comments>
</CheatTable>
